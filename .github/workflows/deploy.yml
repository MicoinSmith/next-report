name: Deploy to Server

on:
  push:
    branches: [ master ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Set Yarn version
        run: |
          corepack enable
          yarn set version 4.10.3

      - name: Install deps
        run: |
          yarn install --immutable || yarn install

      - name: Build
        env:
          NODE_ENV: production
        run: |
          yarn build

      - name: Remote deploy (pull and PM2)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -e
            APP_NAME=${{ secrets.APP_NAME || 'next-report' }}
            DEPLOY_DIR=${{ secrets.DEPLOY_DIR }}
            GIT_BRANCH=${{ secrets.GIT_BRANCH || 'master' }}
            cd "$DEPLOY_DIR"
            git fetch --all
            git checkout "$GIT_BRANCH"
            git pull --rebase origin "$GIT_BRANCH"
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            # 使用 yarn set version 直接设置 Yarn 版本
            yarn set version 4.10.3
            # 验证 Yarn 版本
            yarn --version
            # 安装依赖
            yarn install --immutable || yarn install
            # 构建
            NODE_ENV=production yarn build
            if pm2 describe "$APP_NAME" >/dev/null 2>&1; then
              pm2 restart "$APP_NAME"
            else
              pm2 start "yarn start" --name "$APP_NAME" --time
            fi
            pm2 save || true
