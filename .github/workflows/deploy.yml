name: Deploy to Server

on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'

      - name: Enable Corepack
        run: |
          corepack enable || true

      - name: Install deps
        run: |
          yarn install --immutable || yarn install

      - name: Build
        env:
          NODE_ENV: production
        run: |
          yarn build

      - name: Pack artifact
        run: |
          APP_NAME=next-report
          PKG_NAME="$APP_NAME-$(date +%Y%m%d_%H%M%S).tar.gz"
          mkdir -p _deploy_tmp
          cp -r .next _deploy_tmp/.next
          if [ -d public ]; then cp -r public _deploy_tmp/public; fi
          cp package.json _deploy_tmp/
          if [ -f yarn.lock ]; then cp yarn.lock _deploy_tmp/; fi
          if [ -f next.config.mjs ]; then cp next.config.mjs _deploy_tmp/; fi
          if [ -f .env.production ]; then cp .env.production _deploy_tmp/.env; fi
          tar --no-xattrs -czf "$PKG_NAME" -C _deploy_tmp .
          echo "PKG_NAME=$PKG_NAME" >> $GITHUB_ENV

      - name: Upload package to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          source: ${{ env.PKG_NAME }}
          target: ${{ secrets.DEPLOY_DIR }}

      - name: Remote deploy
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT || 22 }}
          script: |
            set -e
            APP_NAME=${{ secrets.APP_NAME || 'next-report' }}
            DEPLOY_DIR=${{ secrets.DEPLOY_DIR }}
            PKG_NAME=${{ env.PKG_NAME }}
            cd "$DEPLOY_DIR"
            rm -rf .next node_modules public || true
            tar -xzf "$PKG_NAME"
            rm -f "$PKG_NAME" || true
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"
            corepack enable || true
            yarn install --production --frozen-lockfile || yarn install --production
            if pm2 describe "$APP_NAME" >/dev/null 2>&1; then
              pm2 restart "$APP_NAME"
            else
              pm2 start "yarn start" --name "$APP_NAME" --time
            fi
            pm2 save || true
